CREATE TABLE p1 (a int, b int, c varchar, primary key(a,b));
INSERT INTO p1 SELECT i, i % 25, to_char(i, 'FM0000') FROM generate_series(0, 599) i WHERE i % 2 = 0;
ANALYZE p1;
CREATE TABLE p2 (a int, b int, c varchar, primary key(a,b));
INSERT INTO p2 SELECT i, i % 25, to_char(i, 'FM0000') FROM generate_series(0, 599) i WHERE i % 3 = 0;
ANALYZE p2;
CREATE TABLE p3 (a int, b int, c varchar, primary key(a,b));
INSERT INTO p3 SELECT i, i % 25, to_char(i, 'FM0000') FROM generate_series(0, 599) i WHERE i % 5 = 0;
ANALYZE p3;
-- We're testing nested loop join batching in this file
SET enable_hashjoin = off;
SET enable_mergejoin = off;
SET yb_nl_batch_size = 3;
EXPLAIN (COSTS OFF) SELECT * FROM p1 t1 JOIN p2 t2 ON t1.a = t2.a WHERE t1.a <= 100 AND t2.a <= 100;
                              QUERY PLAN                              
----------------------------------------------------------------------
 Nested Loop
   Join Filter: (t1.a = t2.a)
   ->  Seq Scan on p2 t2
         Filter: (a <= 100)
   ->  Index Scan using p1_pkey on p1 t1
         Index Cond: ((a = ANY (ARRAY[t2.a, $1, $2])) AND (a <= 100))
(6 rows)

SELECT * FROM p1 t1 JOIN p2 t2 ON t1.a = t2.a WHERE t1.a <= 100 AND t2.a <= 100;
 a  | b  |  c   | a  | b  |  c   
----+----+------+----+----+------
 78 |  3 | 0078 | 78 |  3 | 0078
 12 | 12 | 0012 | 12 | 12 | 0012
 90 | 15 | 0090 | 90 | 15 | 0090
  6 |  6 | 0006 |  6 |  6 | 0006
 42 | 17 | 0042 | 42 | 17 | 0042
 48 | 23 | 0048 | 48 | 23 | 0048
 96 | 21 | 0096 | 96 | 21 | 0096
 60 | 10 | 0060 | 60 | 10 | 0060
 72 | 22 | 0072 | 72 | 22 | 0072
 36 | 11 | 0036 | 36 | 11 | 0036
 54 |  4 | 0054 | 54 |  4 | 0054
 18 | 18 | 0018 | 18 | 18 | 0018
 66 | 16 | 0066 | 66 | 16 | 0066
 30 |  5 | 0030 | 30 |  5 | 0030
 84 |  9 | 0084 | 84 |  9 | 0084
  0 |  0 | 0000 |  0 |  0 | 0000
 24 | 24 | 0024 | 24 | 24 | 0024
(17 rows)

EXPLAIN (COSTS OFF) SELECT * FROM p3 t3 LEFT OUTER JOIN (SELECT t1.a as a FROM p1 t1 JOIN p2 t2 ON t1.a = t2.b WHERE t1.a <= 100 AND t2.a <= 100) s ON t3.a = s.a WHERE t3.a <= 30;
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Nested Loop Left Join
   Join Filter: (t3.a = t1.a)
   ->  Seq Scan on p3 t3
         Filter: (a <= 30)
   ->  Materialize
         ->  Nested Loop
               Join Filter: (t1.a = t2.b)
               ->  Seq Scan on p2 t2
                     Filter: (a <= 100)
               ->  Index Scan using p1_pkey on p1 t1
                     Index Cond: ((a = ANY (ARRAY[t2.b, $1, $2])) AND (a <= 100))
(11 rows)

SELECT * FROM p3 t3 LEFT OUTER JOIN (SELECT t1.a as a FROM p1 t1 JOIN p2 t2 ON t1.a = t2.b WHERE t1.a <= 100 AND t2.a <= 100) s ON t3.a = s.a WHERE t3.a <= 30;
 a  | b  |  c   | a  
----+----+------+----
  5 |  5 | 0005 |   
 15 | 15 | 0015 |   
 10 | 10 | 0010 | 10
 30 |  5 | 0030 |   
  0 |  0 | 0000 |  0
  0 |  0 | 0000 |  0
 25 |  0 | 0025 |   
 20 | 20 | 0020 | 20
(8 rows)

EXPLAIN (COSTS OFF) SELECT * FROM p3 t3 RIGHT OUTER JOIN (SELECT t1.a as a FROM p1 t1 JOIN p2 t2 ON t1.a = t2.b WHERE t1.b <= 10 AND t2.b <= 15) s ON t3.a = s.a;
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Nested Loop Left Join
   Join Filter: (t3.a = t1.a)
   ->  Nested Loop
         Join Filter: (t1.a = t2.b)
         ->  Seq Scan on p2 t2
               Filter: (b <= 15)
         ->  Index Scan using p1_pkey on p1 t1
               Index Cond: ((a = ANY (ARRAY[t2.b, $1, $2])) AND (b <= 10))
   ->  Index Scan using p3_pkey on p3 t3
         Index Cond: (a = ANY (ARRAY[t1.a, $4, $5]))
(10 rows)

SELECT * FROM p3 t3 RIGHT OUTER JOIN (SELECT t1.a as a FROM p1 t1 JOIN p2 t2 ON t1.a = t2.b WHERE t1.b <= 10 AND t2.b <= 15) s ON t3.a = s.a;
 a  | b  |  c   | a  
----+----+------+----
 10 | 10 | 0010 | 10
    |    |      |  6
    |    |      |  6
 10 | 10 | 0010 | 10
 10 | 10 | 0010 | 10
    |    |      |  8
    |    |      |  2
    |    |      |  2
    |    |      |  4
  0 |  0 | 0000 |  0
  0 |  0 | 0000 |  0
 10 | 10 | 0010 | 10
  0 |  0 | 0000 |  0
    |    |      |  8
    |    |      |  4
    |    |      |  6
    |    |      |  4
    |    |      |  4
 10 | 10 | 0010 | 10
 10 | 10 | 0010 | 10
    |    |      |  4
    |    |      |  8
    |    |      |  6
    |    |      |  2
    |    |      |  8
    |    |      |  2
    |    |      |  4
  0 |  0 | 0000 |  0
 10 | 10 | 0010 | 10
    |    |      |  6
  0 |  0 | 0000 |  0
    |    |      |  8
    |    |      |  4
  0 |  0 | 0000 |  0
  0 |  0 | 0000 |  0
    |    |      |  2
    |    |      |  4
    |    |      |  2
    |    |      |  8
    |    |      |  8
    |    |      |  2
    |    |      |  6
  0 |  0 | 0000 |  0
    |    |      |  6
    |    |      |  8
 10 | 10 | 0010 | 10
    |    |      |  2
    |    |      |  6
(48 rows)

-- anti join--
EXPLAIN (COSTS OFF) SELECT * FROM p1 t1 WHERE NOT EXISTS (SELECT 1 FROM p2 t2 WHERE t1.a = t2.a) AND t1.a <= 40;
                     QUERY PLAN                      
-----------------------------------------------------
 Nested Loop Anti Join
   Join Filter: (t1.a = t2.a)
   ->  Seq Scan on p1 t1
         Filter: (a <= 40)
   ->  Index Scan using p2_pkey on p2 t2
         Index Cond: (a = ANY (ARRAY[t1.a, $1, $2]))
(6 rows)

SELECT * FROM p1 t1 WHERE NOT EXISTS (SELECT 1 FROM p2 t2 WHERE t1.a = t2.a) AND t1.a <= 40;
 a  | b  |  c   
----+----+------
 38 | 13 | 0038
 16 | 16 | 0016
 40 | 15 | 0040
 32 |  7 | 0032
 10 | 10 | 0010
 34 |  9 | 0034
  4 |  4 | 0004
  2 |  2 | 0002
  8 |  8 | 0008
 14 | 14 | 0014
 22 | 22 | 0022
 26 |  1 | 0026
 28 |  3 | 0028
 20 | 20 | 0020
(14 rows)

-- semi join--
EXPLAIN (COSTS OFF) SELECT * FROM p1 t1 WHERE EXISTS (SELECT 1 FROM p2 t2 WHERE t1.a = t2.a) AND t1.a <= 40;
                     QUERY PLAN                      
-----------------------------------------------------
 Nested Loop Semi Join
   Join Filter: (t1.a = t2.a)
   ->  Seq Scan on p1 t1
         Filter: (a <= 40)
   ->  Index Scan using p2_pkey on p2 t2
         Index Cond: (a = ANY (ARRAY[t1.a, $1, $2]))
(6 rows)

SELECT * FROM p1 t1 WHERE EXISTS (SELECT 1 FROM p2 t2 WHERE t1.a = t2.a) AND t1.a <= 40;
 a  | b  |  c   
----+----+------
 12 | 12 | 0012
  6 |  6 | 0006
 36 | 11 | 0036
 18 | 18 | 0018
 30 |  5 | 0030
  0 |  0 | 0000
 24 | 24 | 0024
(7 rows)

set yb_nl_batch_size to 10;
set enable_seqscan to false;
explain (costs off) select * from p1 a join p2 b on a.a = b.a join p3 c on b.a = c.a join p4 d on a.b = d.b where a.b = 10;
                                                QUERY PLAN                                                 
-----------------------------------------------------------------------------------------------------------
 Sort
   Sort Key: a.a, d.a
   ->  Nested Loop
         ->  Index Scan using p4_pkey on p4 d
               Index Cond: (b = 10)
         ->  Materialize
               ->  Nested Loop
                     Join Filter: (a.a = b.a)
                     ->  Nested Loop
                           Join Filter: (a.a = c.a)
                           ->  Index Scan using p1_pkey on p1 a
                                 Index Cond: (b = 10)
                           ->  Index Scan using p3_a_idx on p3 c
                                 Index Cond: (a = ANY (ARRAY[a.a, $1, $2, $3, $4, $5, $6, $7, $8, $9]))
                     ->  Index Scan using p2_a_idx on p2 b
                           Index Cond: (a = ANY (ARRAY[a.a, $11, $12, $13, $14, $15, $16, $17, $18, $19]))
(16 rows)

select * from p1 a join p2 b on a.a = b.a join p3 c on b.a = c.a join p4 d on a.b = d.b where a.b = 10 ORDER BY a.a, b.a, c.a, d.a LIMIT 50;
 a  | b  |  c   | a  | b  |  c   | a  | b  |  c   |  a   | b  |  c   
----+----+------+----+----+------+----+----+------+------+----+------
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 |   35 | 10 | 0035
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 |  210 | 10 | 0210
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 |  385 | 10 | 0385
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 |  560 | 10 | 0560
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 |  735 | 10 | 0735
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 |  910 | 10 | 0910
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 1085 | 10 | 1085
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 1260 | 10 | 1260
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 1435 | 10 | 1435
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 1610 | 10 | 1610
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 1785 | 10 | 1785
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 1960 | 10 | 1960
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 2135 | 10 | 2135
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 2310 | 10 | 2310
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 2485 | 10 | 2485
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 2660 | 10 | 2660
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 2835 | 10 | 2835
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 3010 | 10 | 3010
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 3185 | 10 | 3185
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 3360 | 10 | 3360
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 3535 | 10 | 3535
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 3710 | 10 | 3710
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 3885 | 10 | 3885
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 4060 | 10 | 4060
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 4235 | 10 | 4235
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 4410 | 10 | 4410
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 4585 | 10 | 4585
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 4760 | 10 | 4760
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 4935 | 10 | 4935
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 5110 | 10 | 5110
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 5285 | 10 | 5285
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 5460 | 10 | 5460
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 5635 | 10 | 5635
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 5810 | 10 | 5810
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 5985 | 10 | 5985
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 6160 | 10 | 6160
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 6335 | 10 | 6335
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 6510 | 10 | 6510
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 6685 | 10 | 6685
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 6860 | 10 | 6860
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 7035 | 10 | 7035
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 7210 | 10 | 7210
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 7385 | 10 | 7385
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 7560 | 10 | 7560
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 7735 | 10 | 7735
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 7910 | 10 | 7910
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 8085 | 10 | 8085
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 8260 | 10 | 8260
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 8435 | 10 | 8435
 60 | 10 | 0060 | 60 | 10 | 0060 | 60 | 10 | 0060 | 8610 | 10 | 8610
(50 rows)

DROP TABLE p1;
DROP TABLE p2;
DROP TABLE p3;
DROP TABLE p4;
